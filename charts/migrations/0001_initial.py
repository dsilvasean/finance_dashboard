# Generated by Django 3.2 on 2021-05-21 11:34

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InfoDict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=250)),
                ('sector', models.CharField(max_length=250)),
                ('beta', models.FloatField()),
                ('bookvalue', models.FloatField(db_column='bookValue')),
                ('previousclose', models.FloatField(db_column='previousClose')),
                ('regularmarketopen', models.FloatField(db_column='regularMarketOpen')),
                ('marketcap', models.IntegerField(db_column='marketCap')),
                ('forwardeps', models.FloatField(db_column='forwardEps')),
                ('trailingeps', models.FloatField(db_column='trailingEps')),
                ('wk52hi', models.FloatField()),
                ('wk52lo', models.FloatField()),
            ],
            options={
                'db_table': 'info_dict_',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('ticker', models.CharField(choices=[('3MINDIA.NS', '3MINDIA.NS'), ('ABB.NS', 'ABB.NS'), ('POWERINDIA.NS', 'POWERINDIA.NS'), ('ACC.NS', 'ACC.NS'), ('AIAENG.NS', 'AIAENG.NS'), ('ECLERX.NS', 'ECLERX.NS'), ('APLAPOLLO.NS', 'APLAPOLLO.NS'), ('AUBANK.NS', 'AUBANK.NS'), ('AARTIDRUGS.NS', 'AARTIDRUGS.NS'), ('AARTIIND.NS', 'AARTIIND.NS'), ('AAVAS.NS', 'AAVAS.NS'), ('ABBOTINDIA.NS', 'ABBOTINDIA.NS'), ('ADANIENT.NS', 'ADANIENT.NS'), ('ADANIGREEN.NS', 'ADANIGREEN.NS'), ('ADANIPORTS.NS', 'ADANIPORTS.NS'), ('ATGL.NS', 'ATGL.NS'), ('ADANITRANS.NS', 'ADANITRANS.NS'), ('ABCAPITAL.NS', 'ABCAPITAL.NS'), ('ABFRL.NS', 'ABFRL.NS'), ('ADVENZYMES.NS', 'ADVENZYMES.NS'), ('AEGISCHEM.NS', 'AEGISCHEM.NS'), ('AFFLE.NS', 'AFFLE.NS'), ('AJANTPHARM.NS', 'AJANTPHARM.NS'), ('AKZOINDIA.NS', 'AKZOINDIA.NS'), ('ALEMBICLTD.NS', 'ALEMBICLTD.NS'), ('APLLTD.NS', 'APLLTD.NS'), ('ALKEM.NS', 'ALKEM.NS'), ('ALKYLAMINE.NS', 'ALKYLAMINE.NS'), ('ALOKINDS.NS', 'ALOKINDS.NS'), ('AMARAJABAT.NS', 'AMARAJABAT.NS'), ('AMBER.NS', 'AMBER.NS'), ('AMBUJACEM.NS', 'AMBUJACEM.NS'), ('ANGELBRKG.NS', 'ANGELBRKG.NS'), ('APOLLOHOSP.NS', 'APOLLOHOSP.NS'), ('APOLLOTYRE.NS', 'APOLLOTYRE.NS'), ('ASAHIINDIA.NS', 'ASAHIINDIA.NS'), ('ASHOKLEY.NS', 'ASHOKLEY.NS'), ('ASHOKA.NS', 'ASHOKA.NS'), ('ASIANPAINT.NS', 'ASIANPAINT.NS'), ('ASTERDM.NS', 'ASTERDM.NS'), ('ASTRAZEN.NS', 'ASTRAZEN.NS'), ('ASTRAL.NS', 'ASTRAL.NS'), ('ATUL.NS', 'ATUL.NS'), ('AUROPHARMA.NS', 'AUROPHARMA.NS'), ('AVANTIFEED.NS', 'AVANTIFEED.NS'), ('DMART.NS', 'DMART.NS'), ('AXISBANK.NS', 'AXISBANK.NS'), ('BASF.NS', 'BASF.NS'), ('BEML.NS', 'BEML.NS'), ('BSE.NS', 'BSE.NS'), ('BAJAJ-AUTO.NS', 'BAJAJ-AUTO.NS'), ('BAJAJCON.NS', 'BAJAJCON.NS'), ('BAJAJELEC.NS', 'BAJAJELEC.NS'), ('BAJFINANCE.NS', 'BAJFINANCE.NS'), ('BAJAJFINSV.NS', 'BAJAJFINSV.NS'), ('BAJAJHLDNG.NS', 'BAJAJHLDNG.NS'), ('BALAMINES.NS', 'BALAMINES.NS'), ('BALKRISIND.NS', 'BALKRISIND.NS'), ('BALMLAWRIE.NS', 'BALMLAWRIE.NS'), ('BALRAMCHIN.NS', 'BALRAMCHIN.NS'), ('BANDHANBNK.NS', 'BANDHANBNK.NS'), ('BANKBARODA.NS', 'BANKBARODA.NS'), ('BANKINDIA.NS', 'BANKINDIA.NS'), ('MAHABANK.NS', 'MAHABANK.NS'), ('BATAINDIA.NS', 'BATAINDIA.NS'), ('BAYERCROP.NS', 'BAYERCROP.NS'), ('BERGEPAINT.NS', 'BERGEPAINT.NS'), ('BDL.NS', 'BDL.NS'), ('BEL.NS', 'BEL.NS'), ('BHARATFORG.NS', 'BHARATFORG.NS'), ('BHEL.NS', 'BHEL.NS'), ('BPCL.NS', 'BPCL.NS'), ('BHARATRAS.NS', 'BHARATRAS.NS'), ('BHARTIARTL.NS', 'BHARTIARTL.NS'), ('BIOCON.NS', 'BIOCON.NS'), ('BIRLACORPN.NS', 'BIRLACORPN.NS'), ('BSOFT.NS', 'BSOFT.NS'), ('BLISSGVS.NS', 'BLISSGVS.NS'), ('BLUEDART.NS', 'BLUEDART.NS'), ('BLUESTARCO.NS', 'BLUESTARCO.NS'), ('BBTC.NS', 'BBTC.NS'), ('BOSCHLTD.NS', 'BOSCHLTD.NS'), ('BRIGADE.NS', 'BRIGADE.NS'), ('BRITANNIA.NS', 'BRITANNIA.NS'), ('BURGERKING.NS', 'BURGERKING.NS'), ('CCL.NS', 'CCL.NS'), ('CESC.NS', 'CESC.NS'), ('CRISIL.NS', 'CRISIL.NS'), ('CSBBANK.NS', 'CSBBANK.NS'), ('CADILAHC.NS', 'CADILAHC.NS'), ('CANFINHOME.NS', 'CANFINHOME.NS'), ('CANBK.NS', 'CANBK.NS'), ('CAPLIPOINT.NS', 'CAPLIPOINT.NS'), ('CGCL.NS', 'CGCL.NS'), ('CARBORUNIV.NS', 'CARBORUNIV.NS'), ('CASTROLIND.NS', 'CASTROLIND.NS'), ('CEATLTD.NS', 'CEATLTD.NS'), ('CENTRALBK.NS', 'CENTRALBK.NS'), ('CDSL.NS', 'CDSL.NS'), ('CENTURYPLY.NS', 'CENTURYPLY.NS'), ('CENTURYTEX.NS', 'CENTURYTEX.NS')], max_length=200, primary_key=True, serialize=False)),
                ('owned', models.BooleanField()),
                ('no_of_shares', models.IntegerField()),
                ('buy_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('buy_date', models.DateField()),
                ('amt_invested', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_val', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gain_or_loss', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Stocks',
            fields=[
                ('ticker', models.CharField(max_length=280, primary_key=True, serialize=False)),
                ('sec_code', models.CharField(max_length=250)),
                ('sector', models.CharField(max_length=250)),
                ('shares_outstanding_Cr', models.IntegerField(default=1)),
                ('per_vol_traded_10_day', models.FloatField(blank=True, null=True)),
                ('dividend_yield_per', models.FloatField(blank=True, help_text='incase none default is 1', null=True)),
                ('wk52hi', models.FloatField(blank=True, null=True)),
                ('wk52lo', models.FloatField(blank=True, null=True)),
                ('regularopen', models.FloatField(blank=True, db_column='regularOpen', default=1, null=True)),
                ('previousclose', models.FloatField(blank=True, db_column='previousClose', null=True)),
                ('trailingeps', models.FloatField(blank=True, db_column='trailingEps', default=1, null=True)),
                ('forwardeps', models.FloatField(blank=True, db_column='forwardEps', default=1, help_text='in case none default is 1', null=True)),
                ('mvg_200_clo', models.FloatField(blank=True, null=True)),
                ('mvg_100_clo', models.FloatField(blank=True, null=True)),
                ('mvg_50_clo', models.FloatField(blank=True, null=True)),
                ('mvg_20_clo', models.FloatField(blank=True, null=True)),
                ('mvg_10_clo', models.FloatField(blank=True, null=True)),
                ('mvg_5_clo', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, db_column='Volume', null=True)),
                ('vol_avg_10', models.FloatField(blank=True, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('rel_100_200', models.FloatField(blank=True, null=True)),
                ('rel_50_100', models.FloatField(blank=True, null=True)),
                ('rel_20_50', models.FloatField(blank=True, null=True)),
                ('rel_10_20', models.FloatField(blank=True, null=True)),
                ('rel_52_per', models.FloatField(blank=True, null=True)),
                ('p_upon_e', models.FloatField(blank=True, null=True)),
                ('market_cap', models.IntegerField(blank=True, null=True)),
                ('book_value', models.FloatField(blank=True, null=True)),
                ('beta', models.FloatField(blank=True, null=True)),
                ('owned', models.BooleanField(default=False)),
                ('trailingEps_rel_price_per', models.FloatField(blank=True, null=True)),
                ('forwardEps_rel_price_per', models.FloatField(blank=True, null=True)),
                ('price_bk_ratio', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stocks',
                'managed': True,
            },
        ),
    ]
